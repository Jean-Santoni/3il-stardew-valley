Index: src/main/java/com/stardew/stardewvalley/MenuController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.stardew.stardewvalley;\n\nimport javafx.fxml.FXML;\nimport javafx.fxml.FXMLLoader;\nimport javafx.scene.Scene;\nimport javafx.scene.control.Button;\nimport javafx.scene.image.Image;\nimport javafx.scene.image.ImageView;\nimport javafx.scene.input.MouseButton;\nimport javafx.scene.layout.*;\nimport javafx.scene.media.Media;\nimport javafx.scene.media.MediaPlayer;\nimport javafx.stage.Modality;\nimport javafx.stage.Stage;\n\nimport java.io.File;\nimport java.io.IOException;\n\n/**\n * Classe MenuController permettant de gérer le menu (Controleur MVC de la classe Menu)\n *\n * @version le 19/03/2023\n */\npublic class MenuController {\n    private final int MAX_WIDTH = 4;\n    private final int MAX_HEIGHT = 4;\n    @FXML\n    private ImageView Play;\n    @FXML\n    private GridPane Grille_Menu;\n\n    @FXML\n    private ImageView Exit;\n    @FXML\n    private ImageView Fond_Menu;\n    @FXML\n    private ImageView ImageMenu;\n\n    @FXML\n    private AnchorPane Background_Menu;\n\n    /**\n     * Gère les différentes actions du menu, et ajoute l'image de fond de la fenêtre\n     */\n    @FXML\n    public void initialize(){\n        Background_Menu.setBackground(new Background(new BackgroundImage(new Image(\"file:Images/Fond_menu.png\"),\n                BackgroundRepeat.NO_REPEAT,\n                BackgroundRepeat.NO_REPEAT,\n                BackgroundPosition.CENTER,\n                BackgroundSize.DEFAULT)));\n\n        Play.setImage(new Image(\"file:Images/Play.jpg\"));\n\n        Play.setOnMouseClicked(event -> {\n            try {\n                CarteAffichage();\n\n           } catch (IOException e) {\n                throw new RuntimeException(e);\n            }\n        });\n        Exit.setImage(new Image(\"file:Images/Exit.jpg\"));\n\n        Exit.setOnMouseClicked(even ->  ExitJeux());\n        initialiserMenu(Grille_Menu);\n        Play.setFitWidth(1366/(MAX_WIDTH+1));\n        Play.setFitHeight(768/(MAX_HEIGHT+1));\n\n        Exit.setFitWidth(1366/(MAX_WIDTH+1));\n        Exit.setFitHeight(768/(MAX_HEIGHT+1));\n    }\n    @FXML\n    BorderPane borderPanel;\n\n    /**\n     * Affiche la carte\n     * @throws IOException\n     */\n    @FXML\n    public void CarteAffichage () throws IOException {\n        Stage stage = new Stage();\n        //AnchorPane root = (AnchorPane)FXMLLoader.load(getClass().getResource(\"Menu.fxml\"));\n        BorderPane root = (BorderPane)FXMLLoader.load(getClass().getResource(\"AccessibleValley.fxml\"));\n        //FXMLLoader fxmlLoader = new FXMLLoader(HelloApplication.class.getResource(\"AccessibleValley.fxml\"));\n        // Scene scene = new Scene(fxmlLoader.load(),400,400);\n        Scene scene = new Scene(root,1366,768);\n        stage.setResizable(false);\n        scene.getStylesheets().add(getClass().getResource(\"application.css\").toExternalForm());\n        //scene.setOnKeyPressed(new Clavier(new Carte()));\n        scene.onKeyPressedProperty().bind(root.onKeyPressedProperty());\n        //stage. setFullScreen(true);\n        stage.setScene(scene);\n        stage.initModality(Modality.APPLICATION_MODAL);\n        stage.getIcons().add(new Image(\"file:Images/Logo.png\"));\n        stage.setTitle(\"AccessibleValley\");\n        stage.show();\n    }\n\n    /**\n     * Permet de quitter la partie\n     */\n    @FXML\n    public void ExitJeux (){\n        System.exit(0);\n    }\n\n    /**\n     * Initialise le menu\n     * @param grid\n     */\n    private void initialiserMenu(GridPane grid) {\n\n        grid.getColumnConstraints().clear();\n        grid.getRowConstraints().clear();\n        for (int c = 0; c <= MAX_WIDTH; c++) {\n            ColumnConstraints column = new ColumnConstraints();\n            //column.setPercentWidth(100.0 / 2);\n            column.setMaxWidth(1366/(MAX_WIDTH+1));\n            column.setMinWidth(1366/(MAX_WIDTH+1));\n            grid.getColumnConstraints().add(column);\n        }\n        for (int r = 0; r <= MAX_HEIGHT; r++) {\n            RowConstraints row = new RowConstraints();\n            //row.setPercentHeight(100.0 / 4);\n            row.setMaxHeight(768/(MAX_HEIGHT+1));\n            row.setMinHeight(768/(MAX_HEIGHT+1));\n            grid.getRowConstraints().add(row);\n        }\n\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/stardew/stardewvalley/MenuController.java b/src/main/java/com/stardew/stardewvalley/MenuController.java
--- a/src/main/java/com/stardew/stardewvalley/MenuController.java	(revision 831103e8fb9e1e5bf01b78d1f6cbb5e5075fa7ea)
+++ b/src/main/java/com/stardew/stardewvalley/MenuController.java	(date 1679475412657)
@@ -3,17 +3,12 @@
 import javafx.fxml.FXML;
 import javafx.fxml.FXMLLoader;
 import javafx.scene.Scene;
-import javafx.scene.control.Button;
 import javafx.scene.image.Image;
 import javafx.scene.image.ImageView;
-import javafx.scene.input.MouseButton;
 import javafx.scene.layout.*;
-import javafx.scene.media.Media;
-import javafx.scene.media.MediaPlayer;
 import javafx.stage.Modality;
 import javafx.stage.Stage;
 
-import java.io.File;
 import java.io.IOException;
 
 /**
@@ -22,17 +17,22 @@
  * @version le 19/03/2023
  */
 public class MenuController {
+
     private final int MAX_WIDTH = 4;
     private final int MAX_HEIGHT = 4;
+
     @FXML
     private ImageView Play;
+
     @FXML
     private GridPane Grille_Menu;
 
     @FXML
     private ImageView Exit;
+
     @FXML
     private ImageView Fond_Menu;
+
     @FXML
     private ImageView ImageMenu;
 
@@ -43,7 +43,7 @@
      * Gère les différentes actions du menu, et ajoute l'image de fond de la fenêtre
      */
     @FXML
-    public void initialize(){
+    public void initialize() {
         Background_Menu.setBackground(new Background(new BackgroundImage(new Image("file:Images/Fond_menu.png"),
                 BackgroundRepeat.NO_REPEAT,
                 BackgroundRepeat.NO_REPEAT,
@@ -80,16 +80,11 @@
     @FXML
     public void CarteAffichage () throws IOException {
         Stage stage = new Stage();
-        //AnchorPane root = (AnchorPane)FXMLLoader.load(getClass().getResource("Menu.fxml"));
         BorderPane root = (BorderPane)FXMLLoader.load(getClass().getResource("AccessibleValley.fxml"));
-        //FXMLLoader fxmlLoader = new FXMLLoader(HelloApplication.class.getResource("AccessibleValley.fxml"));
-        // Scene scene = new Scene(fxmlLoader.load(),400,400);
         Scene scene = new Scene(root,1366,768);
         stage.setResizable(false);
         scene.getStylesheets().add(getClass().getResource("application.css").toExternalForm());
-        //scene.setOnKeyPressed(new Clavier(new Carte()));
         scene.onKeyPressedProperty().bind(root.onKeyPressedProperty());
-        //stage. setFullScreen(true);
         stage.setScene(scene);
         stage.initModality(Modality.APPLICATION_MODAL);
         stage.getIcons().add(new Image("file:Images/Logo.png"));
@@ -115,14 +110,12 @@
         grid.getRowConstraints().clear();
         for (int c = 0; c <= MAX_WIDTH; c++) {
             ColumnConstraints column = new ColumnConstraints();
-            //column.setPercentWidth(100.0 / 2);
             column.setMaxWidth(1366/(MAX_WIDTH+1));
             column.setMinWidth(1366/(MAX_WIDTH+1));
             grid.getColumnConstraints().add(column);
         }
         for (int r = 0; r <= MAX_HEIGHT; r++) {
             RowConstraints row = new RowConstraints();
-            //row.setPercentHeight(100.0 / 4);
             row.setMaxHeight(768/(MAX_HEIGHT+1));
             row.setMinHeight(768/(MAX_HEIGHT+1));
             grid.getRowConstraints().add(row);
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"AutoImportSettings\">\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\n  </component>\n  <component name=\"ChangeListManager\">\n    <list default=\"true\" id=\"b143f2f1-d7ed-4b23-ab9d-e94571a5451b\" name=\"Changes\" comment=\"Alignement des case de la carte au centre et en bas\" />\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\n  </component>\n  <component name=\"FileTemplateManagerImpl\">\n    <option name=\"RECENT_TEMPLATES\">\n      <list>\n        <option value=\"FxmlFile\" />\n        <option value=\"Class\" />\n      </list>\n    </option>\n  </component>\n  <component name=\"Git.Settings\">\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\n  </component>\n  <component name=\"MarkdownSettingsMigration\">\n    <option name=\"stateVersion\" value=\"1\" />\n  </component>\n  <component name=\"MavenImportPreferences\">\n    <option name=\"importingSettings\">\n      <MavenImportingSettings>\n        <option name=\"workspaceImportEnabled\" value=\"true\" />\n      </MavenImportingSettings>\n    </option>\n  </component>\n  <component name=\"ProjectId\" id=\"2Mxl3RPiaovRDQMwVDMvcihMTAo\" />\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\">\n    <ConfirmationsSetting value=\"2\" id=\"Add\" />\n  </component>\n  <component name=\"ProjectViewState\">\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\n    <option name=\"showLibraryContents\" value=\"true\" />\n  </component>\n  <component name=\"PropertiesComponent\">{\n  &quot;keyToString&quot;: {\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\n    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,\n    &quot;last_opened_file_path&quot;: &quot;C:/Users/louis/IdeaProjects/3il-stardew-valley/src/main/resources/com/stardew/stardewvalley&quot;\n  }\n}</component>\n  <component name=\"RecentsManager\">\n    <key name=\"CopyFile.RECENT_KEYS\">\n      <recent name=\"C:\\Users\\louis\\IdeaProjects\\3il-stardew-valley\\src\\main\\resources\\com\\stardew\\stardewvalley\" />\n    </key>\n    <key name=\"MoveFile.RECENT_KEYS\">\n      <recent name=\"C:\\Users\\louis\\IdeaProjects\\3il-stardew-valley\\Images\" />\n      <recent name=\"C:\\Users\\louis\\IdeaProjects\\3il-stardew-valley\\src\\main\\resources\\com\\stardew\\stardewvalley\" />\n      <recent name=\"D:\\Java3il\\3il-stardew-valley\" />\n      <recent name=\"D:\\Java3il\\3il-stardew-valley\\src\\main\\resources\\com\\stardew\\stardewvalley\" />\n    </key>\n    <key name=\"MoveClassesOrPackagesDialog.RECENTS_KEY\">\n      <recent name=\"\" />\n    </key>\n  </component>\n  <component name=\"RunManager\">\n    <configuration name=\"com.stardew.stardewvalley.HelloApplication\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\n      <option name=\"MAIN_CLASS_NAME\" value=\"com.stardew.stardewvalley.HelloApplication\" />\n      <module name=\"stardew-valley\" />\n      <extension name=\"coverage\">\n        <pattern>\n          <option name=\"PATTERN\" value=\"stardewvalley.*\" />\n          <option name=\"ENABLED\" value=\"true\" />\n        </pattern>\n      </extension>\n      <method v=\"2\">\n        <option name=\"Make\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <recent_temporary>\n      <list>\n        <item itemvalue=\"Application.com.stardew.stardewvalley.HelloApplication\" />\n      </list>\n    </recent_temporary>\n  </component>\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\n  <component name=\"TaskManager\">\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\n      <changelist id=\"b143f2f1-d7ed-4b23-ab9d-e94571a5451b\" name=\"Changes\" comment=\"\" />\n      <created>1678716917196</created>\n      <option name=\"number\" value=\"Default\" />\n      <option name=\"presentableId\" value=\"Default\" />\n      <updated>1678716917196</updated>\n    </task>\n    <task id=\"LOCAL-00001\" summary=\"commit des fichier de Louis\">\n      <created>1678718013886</created>\n      <option name=\"number\" value=\"00001\" />\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1678718013887</updated>\n    </task>\n    <task id=\"LOCAL-00002\" summary=\"correction lancement application\">\n      <created>1678719694163</created>\n      <option name=\"number\" value=\"00002\" />\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1678719694163</updated>\n    </task>\n    <task id=\"LOCAL-00003\" summary=\"Création de la classe abstraite ObjetInteractif\">\n      <created>1678722013686</created>\n      <option name=\"number\" value=\"00003\" />\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1678722013686</updated>\n    </task>\n    <task id=\"LOCAL-00004\" summary=\"fix: correction d'une erreur sur ObjetInterractif\">\n      <created>1678722318598</created>\n      <option name=\"number\" value=\"00004\" />\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1678722318598</updated>\n    </task>\n    <task id=\"LOCAL-00005\" summary=\"Ajout d'un attribut marchable sur ObjetInteractif\">\n      <created>1678723408776</created>\n      <option name=\"number\" value=\"00005\" />\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1678723408776</updated>\n    </task>\n    <task id=\"LOCAL-00006\" summary=\"Deplacement du personnage sur la carte\">\n      <created>1678870020708</created>\n      <option name=\"number\" value=\"00006\" />\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1678870020708</updated>\n    </task>\n    <task id=\"LOCAL-00007\" summary=\"Alignement des case de la carte au centre et en bas\">\n      <created>1679473774222</created>\n      <option name=\"number\" value=\"00007\" />\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1679473774222</updated>\n    </task>\n    <option name=\"localTasksCounter\" value=\"8\" />\n    <servers />\n  </component>\n  <component name=\"VcsManagerConfiguration\">\n    <MESSAGE value=\"commit des fichier de Louis\" />\n    <MESSAGE value=\"correction lancement application\" />\n    <MESSAGE value=\"Création de la classe abstraite ObjetInteractif\" />\n    <MESSAGE value=\"fix: correction d'une erreur sur ObjetInterractif\" />\n    <MESSAGE value=\"Ajout d'un attribut marchable sur ObjetInteractif\" />\n    <MESSAGE value=\"Deplacement du personnage sur la carte\" />\n    <MESSAGE value=\"Alignement des case de la carte au centre et en bas\" />\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Alignement des case de la carte au centre et en bas\" />\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 831103e8fb9e1e5bf01b78d1f6cbb5e5075fa7ea)
+++ b/.idea/workspace.xml	(date 1679475434299)
@@ -4,7 +4,16 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="b143f2f1-d7ed-4b23-ab9d-e94571a5451b" name="Changes" comment="Alignement des case de la carte au centre et en bas" />
+    <list default="true" id="b143f2f1-d7ed-4b23-ab9d-e94571a5451b" name="Changes" comment="Alignement des case de la carte au centre et en bas">
+      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/com/stardew/stardewvalley/AccessibleValleyController.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/stardew/stardewvalley/AccessibleValleyController.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/com/stardew/stardewvalley/Carte.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/stardew/stardewvalley/Carte.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/com/stardew/stardewvalley/Champ.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/stardew/stardewvalley/Champ.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/com/stardew/stardewvalley/Clavier.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/stardew/stardewvalley/Clavier.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/com/stardew/stardewvalley/HelloApplication.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/stardew/stardewvalley/HelloApplication.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/com/stardew/stardewvalley/Maison.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/stardew/stardewvalley/Maison.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/com/stardew/stardewvalley/MenuController.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/stardew/stardewvalley/MenuController.java" afterDir="false" />
+    </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
     <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
Index: src/main/java/com/stardew/stardewvalley/Champ.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.stardew.stardewvalley;\n\nimport javafx.scene.control.Alert;\nimport javafx.scene.control.ButtonType;\nimport javafx.scene.control.ChoiceDialog;\nimport javafx.scene.image.Image;\n\nimport java.util.Optional;\n\n/**\n * Classe Champ héritant d'ObjetInteractif\n *\n * @since le 13/03/2023\n * @version le 19/03/2023\n */\npublic class Champ extends ObjetInteractif {\n\n    private boolean estCultive; // Si le champ est cultivé ou non\n    private boolean estPlante; // Si le champ est vide ou non\n\n    /**\n     * Constructeur de Champ\n     *\n     * @param pfPosX la position du carré champ sur les abscisses\n     * @param pfPosY la position du carré champ sur les ordonnées\n     */\n    public Champ(int pfPosX, int pfPosY) {\n        super(pfPosX, pfPosY, true);\n        this.estCultive = false;\n        this.estPlante = false;\n        this.setImage(new Image(\"file:Images/champ_non_cultive.png\"));\n    }\n\n    /**\n     * @return true si le champ est cultivé, sinon false\n     */\n    public boolean getEstCultive() {\n        return this.estCultive;\n    }\n\n    /**\n     * @param pfEstCultive si le champ est cultivé ou non\n     */\n    public void setEstCultive(boolean pfEstCultive) {\n        if(!this.estCultive) {\n            validationCulture(pfEstCultive);\n        } else {\n            choixCulture();\n            //this.setImage(new Image(\"file:Images/champ_non_cultive.png\"));\n        }\n    }\n\n    /**\n     * Permet de cultiver le champ\n     */\n    @Override\n    public void interraction() {\n        super.interraction();\n        setEstCultive(true);\n    }\n\n    /**\n     * Permet de cultiver ou non un champ\n     * @param b true pour le cultiver, sinon false\n     */\n    public void validationCulture(boolean b) {\n\n        Alert dialogC = new Alert(Alert.AlertType.CONFIRMATION);\n        dialogC.setTitle(\"Voulez vous cultivez ce champ\");\n        dialogC.setHeaderText(null);\n        dialogC.setContentText(\"Voulez vous cultivez ce champ\");\n        Optional<ButtonType> answer = dialogC.showAndWait();\n\n        if (answer.get() == ButtonType.OK) {\n            this.estCultive = b;\n            this.setImage(new Image(\"file:Images/champ_cultive.png\"));\n        } else {\n            System.out.println(\"User chose Cancel or closed the dialog-box\");\n        }\n\n    }\n\n    /**\n     * Permet de choisir la culture du champ\n     */\n    public void choixCulture() {\n        String[] choices = {\"Houblon\", \"Blé\", \"Patate\", \"Tomate\",\"Maïs\"};\n        ChoiceDialog<String> cDial = new ChoiceDialog<>(choices[2], choices);\n        cDial.setTitle(\"Choix de la culture\");\n        cDial.setHeaderText(\"Selectionner la culture voulu\");\n        cDial.setContentText(\"Culture:\");\n        Optional<String> selection = cDial.showAndWait();\n        selection.ifPresent(str -> typeCulture(str));\n\n    }\n\n    /**\n     * Modifie l'image du champ en fonction du type de culture\n     * @param s le type de champ\n     */\n    public void typeCulture(String s) {\n        switch (s) {\n            case \"Houblon\":\n                this.setImage(new Image(\"file:Images/Hops_Stage_8.png\"));\n                break;\n            case \"Blé\":\n                this.setImage(new Image(\"file:Images/Wheat_Stage_5.png\"));\n                break;\n            case \"Patate\":\n                //Personnage.deplacerY(1);\n                this.setImage(new Image(\"file:Images/Potato_Stage_6.png\"));\n                break;\n            case \"Tomate\":\n                this.setImage(new Image(\"file:Images/Tomato_Stage_6.png\"));\n                break;\n            case \"Maïs\":\n                this.setImage(new Image(\"file:Images/Corn_Stage_6.png\"));\n                break;\n            default:\n                break;\n        }\n\n    }\n\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/stardew/stardewvalley/Champ.java b/src/main/java/com/stardew/stardewvalley/Champ.java
--- a/src/main/java/com/stardew/stardewvalley/Champ.java	(revision 831103e8fb9e1e5bf01b78d1f6cbb5e5075fa7ea)
+++ b/src/main/java/com/stardew/stardewvalley/Champ.java	(date 1679474945042)
@@ -11,7 +11,7 @@
  * Classe Champ héritant d'ObjetInteractif
  *
  * @since le 13/03/2023
- * @version le 19/03/2023
+ * @version le 22/03/2023
  */
 public class Champ extends ObjetInteractif {
 
@@ -74,8 +74,6 @@
         if (answer.get() == ButtonType.OK) {
             this.estCultive = b;
             this.setImage(new Image("file:Images/champ_cultive.png"));
-        } else {
-            System.out.println("User chose Cancel or closed the dialog-box");
         }
 
     }
@@ -107,7 +105,6 @@
                 this.setImage(new Image("file:Images/Wheat_Stage_5.png"));
                 break;
             case "Patate":
-                //Personnage.deplacerY(1);
                 this.setImage(new Image("file:Images/Potato_Stage_6.png"));
                 break;
             case "Tomate":
Index: src/main/java/com/stardew/stardewvalley/Clavier.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.stardew.stardewvalley;\n\nimport javafx.event.EventHandler;\nimport javafx.scene.input.KeyEvent;\n\n/**\n * Classe Clavier permettant de capturer la touche enfoncée par le joueur, et de déclencher les actions correspondantes\n * (déplacement du joueur, interaction, quitter le jeu)\n *\n * @version le 19/03/2023\n */\npublic class Clavier implements EventHandler<KeyEvent> {\n\n    private Carte carte;\n\n    /**\n     * Constructeur de Clavier\n     * @param carte la carte chargée dans le jeu\n     */\n    public Clavier(Carte carte) {\n        super();\n        this.carte = carte;\n    }\n\n    /**\n     * Capture les différents enfoncement des touches, et déclenche les fonctions correspondantes\n     * @param event\n     */\n    @Override\n    public void handle(KeyEvent event) {\n        switch (event.getCode()) {\n            case RIGHT:\n                //Personnage.deplacerX(1);\n                this.carte.deplacerJoueur(0,1);\n                this.carte.setDeplacementPrecedent(event);\n                break;\n            case LEFT:\n                //Personnage.deplacerX(-1);\n                this.carte.deplacerJoueur(0,-1);\n                this.carte.setDeplacementPrecedent(event);\n                break;\n            case UP:\n                //Personnage.deplacerY(1);\n                this.carte.deplacerJoueur(-1,0);\n                this.carte.setDeplacementPrecedent(event);\n                break;\n            case DOWN:\n                //Personnage.deplacerY(-1);\n                this.carte.deplacerJoueur(1,0);\n                this.carte.setDeplacementPrecedent(event);\n                break;\n            case SHIFT:\n                //Personnage.deplacerY(-1);\n                this.carte.interagir();\n                break;\n            case ESCAPE:\n                //Personnage.deplacerY(-1);\n                this.carte.quitterJeu();\n                break;\n            default:\n                break;\n        }\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/stardew/stardewvalley/Clavier.java b/src/main/java/com/stardew/stardewvalley/Clavier.java
--- a/src/main/java/com/stardew/stardewvalley/Clavier.java	(revision 831103e8fb9e1e5bf01b78d1f6cbb5e5075fa7ea)
+++ b/src/main/java/com/stardew/stardewvalley/Clavier.java	(date 1679474945046)
@@ -7,7 +7,7 @@
  * Classe Clavier permettant de capturer la touche enfoncée par le joueur, et de déclencher les actions correspondantes
  * (déplacement du joueur, interaction, quitter le jeu)
  *
- * @version le 19/03/2023
+ * @version le 22/03/2023
  */
 public class Clavier implements EventHandler<KeyEvent> {
 
@@ -30,31 +30,25 @@
     public void handle(KeyEvent event) {
         switch (event.getCode()) {
             case RIGHT:
-                //Personnage.deplacerX(1);
                 this.carte.deplacerJoueur(0,1);
                 this.carte.setDeplacementPrecedent(event);
                 break;
             case LEFT:
-                //Personnage.deplacerX(-1);
                 this.carte.deplacerJoueur(0,-1);
                 this.carte.setDeplacementPrecedent(event);
                 break;
             case UP:
-                //Personnage.deplacerY(1);
                 this.carte.deplacerJoueur(-1,0);
                 this.carte.setDeplacementPrecedent(event);
                 break;
             case DOWN:
-                //Personnage.deplacerY(-1);
                 this.carte.deplacerJoueur(1,0);
                 this.carte.setDeplacementPrecedent(event);
                 break;
             case SHIFT:
-                //Personnage.deplacerY(-1);
                 this.carte.interagir();
                 break;
             case ESCAPE:
-                //Personnage.deplacerY(-1);
                 this.carte.quitterJeu();
                 break;
             default:
Index: src/main/java/com/stardew/stardewvalley/HelloApplication.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.stardew.stardewvalley;\n\nimport javafx.application.Application;\nimport javafx.fxml.FXML;\nimport javafx.fxml.FXMLLoader;\nimport javafx.scene.Scene;\nimport javafx.scene.image.Image;\nimport javafx.scene.image.ImageView;\nimport javafx.scene.layout.AnchorPane;\nimport javafx.scene.layout.BorderPane;\nimport javafx.scene.layout.Pane;\nimport javafx.stage.Stage;\n\nimport java.io.IOException;\nimport java.net.URL;\n\n/**\n * Classe permettant de lancer le jeu AccessibleValley\n *\n * @version le 19/03/2023\n */\npublic class HelloApplication extends Application {\n    @Override\n    public void start(Stage stage) throws IOException {\n        try {\n            AnchorPane root = (AnchorPane)FXMLLoader.load(getClass().getResource(\"Menu.fxml\"));\n            // BorderPane root = (BorderPane)FXMLLoader.load(getClass().getResource(\"AccessibleValley.fxml\"));\n            //FXMLLoader fxmlLoader = new FXMLLoader(HelloApplication.class.getResource(\"AccessibleValley.fxml\"));\n            // Scene scene = new Scene(fxmlLoader.load(),400,400);\n            Scene scene = new Scene(root,1366,768);\n            stage.setResizable(false);\n            scene.getStylesheets().add(getClass().getResource(\"application.css\").toExternalForm());\n            //scene.setOnKeyPressed(new Clavier(new Carte()));\n            scene.onKeyPressedProperty().bind(root.onKeyPressedProperty());\n            //stage. setFullScreen(true);\n            stage.getIcons().add(new Image(\"file:Images/Logo.png\"));\n            stage.setScene(scene);\n            stage.setTitle(\"AccessibleValley\");\n            stage.show();\n\n        } catch(Exception e) {\n            e.printStackTrace();\n        }\n    }\n\n    /**\n     * Main function\n     */\n    public static void main(String[] args) {\n        launch();\n    }\n    \n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/stardew/stardewvalley/HelloApplication.java b/src/main/java/com/stardew/stardewvalley/HelloApplication.java
--- a/src/main/java/com/stardew/stardewvalley/HelloApplication.java	(revision 831103e8fb9e1e5bf01b78d1f6cbb5e5075fa7ea)
+++ b/src/main/java/com/stardew/stardewvalley/HelloApplication.java	(date 1679474945050)
@@ -1,38 +1,28 @@
 package com.stardew.stardewvalley;
 
 import javafx.application.Application;
-import javafx.fxml.FXML;
 import javafx.fxml.FXMLLoader;
 import javafx.scene.Scene;
 import javafx.scene.image.Image;
-import javafx.scene.image.ImageView;
 import javafx.scene.layout.AnchorPane;
-import javafx.scene.layout.BorderPane;
-import javafx.scene.layout.Pane;
 import javafx.stage.Stage;
 
 import java.io.IOException;
-import java.net.URL;
 
 /**
  * Classe permettant de lancer le jeu AccessibleValley
  *
- * @version le 19/03/2023
+ * @version le 22/03/2023
  */
 public class HelloApplication extends Application {
     @Override
     public void start(Stage stage) throws IOException {
         try {
             AnchorPane root = (AnchorPane)FXMLLoader.load(getClass().getResource("Menu.fxml"));
-            // BorderPane root = (BorderPane)FXMLLoader.load(getClass().getResource("AccessibleValley.fxml"));
-            //FXMLLoader fxmlLoader = new FXMLLoader(HelloApplication.class.getResource("AccessibleValley.fxml"));
-            // Scene scene = new Scene(fxmlLoader.load(),400,400);
             Scene scene = new Scene(root,1366,768);
             stage.setResizable(false);
             scene.getStylesheets().add(getClass().getResource("application.css").toExternalForm());
-            //scene.setOnKeyPressed(new Clavier(new Carte()));
             scene.onKeyPressedProperty().bind(root.onKeyPressedProperty());
-            //stage. setFullScreen(true);
             stage.getIcons().add(new Image("file:Images/Logo.png"));
             stage.setScene(scene);
             stage.setTitle("AccessibleValley");
Index: src/main/java/com/stardew/stardewvalley/Maison.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.stardew.stardewvalley;\n\npublic class Maison extends ObjetInteractif{\n    private boolean porte;\n    public Maison(int pfPosX, int pfPosY,boolean porte) {\n        super(pfPosX, pfPosY, false);\n        this.porte=porte;\n    }\n\n    @Override\n    public void interraction() {\n        if(this.porte){\n            System.out.println(\"C'est bon\");\n        }\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/stardew/stardewvalley/Maison.java b/src/main/java/com/stardew/stardewvalley/Maison.java
--- a/src/main/java/com/stardew/stardewvalley/Maison.java	(revision 831103e8fb9e1e5bf01b78d1f6cbb5e5075fa7ea)
+++ b/src/main/java/com/stardew/stardewvalley/Maison.java	(date 1679474945054)
@@ -1,7 +1,15 @@
 package com.stardew.stardewvalley;
 
-public class Maison extends ObjetInteractif{
+/**
+ * Classe Maison héritant d'ObjetInteractif
+ *
+ * @since le 22/03/2023
+ * @version le 22/03/2023
+ */
+public class Maison extends ObjetInteractif {
+
     private boolean porte;
+
     public Maison(int pfPosX, int pfPosY,boolean porte) {
         super(pfPosX, pfPosY, false);
         this.porte=porte;
@@ -13,4 +21,5 @@
             System.out.println("C'est bon");
         }
     }
+
 }
Index: src/main/java/com/stardew/stardewvalley/Carte.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.stardew.stardewvalley;\n\nimport javafx.collections.ObservableList;\nimport javafx.geometry.HPos;\nimport javafx.geometry.Pos;\nimport javafx.geometry.VPos;\nimport javafx.scene.Node;\nimport javafx.scene.control.Alert;\nimport javafx.scene.control.ButtonType;\nimport javafx.scene.image.Image;\nimport javafx.scene.image.ImageView;\nimport javafx.scene.input.KeyEvent;\nimport javafx.scene.layout.*;\nimport javafx.scene.media.Media;\nimport javafx.scene.media.MediaPlayer;\n\nimport java.io.File;\nimport java.util.Optional;\n\n/**\n * Classe Carte héritant d'une Grille\n * Contient les fonctions permettant de déplacer le joueur, initialiser la carte, interagir et quitter le jeu\n *\n * @version le 19/03/2023\n */\npublic class Carte extends GridPane {\n\n    private final int MAX_WIDTH = 20;\n    private final int MAX_HEIGHT = 10;\n    private KeyEvent deplacementPrecedent;\n    private Image fondCarte = new Image(\"file:Images/RPG-Maper-Maison.png\");\n\n    private Personnage personnage;\n\n    /**\n     * Constructeur de Carte\n     */\n    public Carte() {\n\n        super();\n\n        this.setOnKeyPressed(new Clavier(this));\n        initialiserCarte();\n        this.personnage = new Personnage();\n        //this.personnage.setFitHeight(100);\n        //this.personnage.setFitWidth(70);\n        this.personnage.setPreserveRatio(true);\n        this.personnage.setFitHeight(100);\n        this.add(this.personnage,0,0);\n        this.setBackground(new Background(new BackgroundImage(fondCarte,\n                BackgroundRepeat.NO_REPEAT,\n                BackgroundRepeat.NO_REPEAT,\n                BackgroundPosition.CENTER,\n                new BackgroundSize(100,100,\n                        true, true,true, true))));\n        //adapterObjets();\n    }\n\n    /**\n     * Permet d'initialiser la Carte\n     */\n    private void initialiserCarte() {\n\n        this.getColumnConstraints().clear();\n        this.getRowConstraints().clear();\n\n        for (int c = 0; c <= MAX_WIDTH; c++) {\n            ColumnConstraints column = new ColumnConstraints();\n            //column.setPercentWidth(100.0 / 2);\n            column.setMaxWidth(1366/(MAX_WIDTH+1));\n            column.setMinWidth(1366/(MAX_WIDTH+1));\n            column.setHalignment(HPos.CENTER);\n            this.getColumnConstraints().add(column);\n        }\n\n        for (int r = 0; r <= MAX_HEIGHT; r++) {\n            RowConstraints row = new RowConstraints();\n            //row.setPercentHeight(100.0 / 4);\n            row.setMaxHeight(768/(MAX_HEIGHT+1));\n            row.setMinHeight(768/(MAX_HEIGHT+1));\n            row.setValignment(VPos.BOTTOM);\n            this.getRowConstraints().add(row);\n        }\n\n        this.setGridLinesVisible(true);\n\n    }\n\n    public int getMAX_WIDTH() {\n        return this.MAX_WIDTH;\n    }\n\n    public int getMAX_HEIGHT() {\n        return this.MAX_HEIGHT;\n    }\n\n    /**\n     * Permet de déplacer le joueur s'il est déplacable sur la case souhaitée\n     *\n     * @param i l'abscisse de la case sur laquelle le joueur doit se déplacer\n     * @param i1 l'ordonnée de la case sur laquelle le joueur doit se déplacer\n     */\n    public void deplacerJoueur(int i, int i1) {\n        if(joueurDeplacable(this.personnage.getPosY() +i,this.personnage.getPosX() + i1)){\n            this.getChildren().remove(this.personnage);\n            this.personnage.setPosX(this.personnage.getPosX() +i1);\n            this.personnage.setPosY(this.personnage.getPosY() +i);\n            this.add(this.personnage,this.personnage.getPosX(),this.personnage.getPosY());\n\n        }\n    }\n\n    /**\n     * Détermine si le joueur est déplacable aux coordonnées envoyées\n     *\n     * @param i l'abscisse de la case à tester\n     * @param i1 l'ordonnée de la case à tester\n     *\n     * @return true si le joueur peut se déplacer sur cette case, sinon false\n     */\n    private boolean joueurDeplacable(int i, int i1) {\n\n        boolean result = true;\n\n        if(i<0||i1<0||i>MAX_HEIGHT||i1>MAX_WIDTH) {\n            result = false;\n        }\n\n        if(getNodeByRowColumnIndex(i, i1) != null){\n            if(((ObjetInteractif)getNodeByRowColumnIndex(i,i1)).getEstMarchable()) {\n                result = true;\n            } else{\n                result = false;\n            }\n        }\n\n        return result;\n\n    }\n\n    /**\n     * Permet de retourner l'élément présent sur la case du tableau)\n     *\n     * @param row l'abscisse de la case\n     * @param column l'ordonnée de la case\n     *\n     * @return l'élément présent sur cette case\n     */\n    public Node getNodeByRowColumnIndex (final int row, final int column) {\n        Node result = null;\n        ObservableList<Node> childrens = this.getChildren();\n\n        for (Node node : childrens) {\n            if(this.getRowIndex(node) != null&& this.getColumnIndex(node) != null){\n                if(this.getRowIndex(node) == row && this.getColumnIndex(node) == column) {\n                    result = node;\n                    break;\n                }\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @return Renvoie la largeur en pixels d'une case du tableau\n     */\n    public double getCellWidth() {\n        return 1366/(MAX_WIDTH+1);\n    }\n\n    /**\n     * @return Renvoie la hauteur en pixels d'une case du tableau\n     */\n    public double getCellHeight() {\n        return 768/(MAX_HEIGHT+1);\n    }\n\n    public void setDeplacementPrecedent(KeyEvent k){\n        this.deplacementPrecedent=k;\n    }\n\n    /**\n     * Gère l'interaction du joueur sur la carte\n     */\n    public void interagir() {\n\n        int Xobjet = 0;\n        int Yobjet = 0;\n\n        switch (this.deplacementPrecedent.getCode()) {\n            case RIGHT:\n                //Personnage.deplacerX(1);\n                Xobjet=this.personnage.getPosX()+1;\n                Yobjet=this.personnage.getPosY();\n                break;\n            case LEFT:\n                //Personnage.deplacerX(-1);\n                Xobjet=this.personnage.getPosX()-1;\n                Yobjet=this.personnage.getPosY();\n                break;\n            case UP:\n                //Personnage.deplacerY(1);\n                Xobjet=this.personnage.getPosX();\n                Yobjet=this.personnage.getPosY()-1;\n                break;\n            case DOWN:\n                //Personnage.deplacerY(-1);\n                Xobjet=this.personnage.getPosX();\n                Yobjet=this.personnage.getPosY()+1;\n                break;\n            default:\n                break;\n        }\n\n        if(this.getNodeByRowColumnIndex(Yobjet,Xobjet) != null) {\n           ObjetInteractif objet= (ObjetInteractif) getNodeByRowColumnIndex(Yobjet,Xobjet);\n           objet.interraction();\n        }\n\n    }\n\n    /**\n     * Permet de quitter le jeu (affiche un prompt à l'utilisateur)\n     */\n    public void quitterJeu() {\n        Alert dialogC = new Alert(Alert.AlertType.CONFIRMATION);\n        dialogC.setTitle(\"Voulez-vous quitter le jeu\");\n        dialogC.setHeaderText(null);\n        dialogC.setContentText(\"Voulez-vous quitter le jeu ?\");\n        Optional<ButtonType> answer = dialogC.showAndWait();\n\n        if (answer.get() == ButtonType.OK) {\n            System.exit(0);\n        }\n    }\n\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/stardew/stardewvalley/Carte.java b/src/main/java/com/stardew/stardewvalley/Carte.java
--- a/src/main/java/com/stardew/stardewvalley/Carte.java	(revision 831103e8fb9e1e5bf01b78d1f6cbb5e5075fa7ea)
+++ b/src/main/java/com/stardew/stardewvalley/Carte.java	(date 1679475120929)
@@ -2,19 +2,14 @@
 
 import javafx.collections.ObservableList;
 import javafx.geometry.HPos;
-import javafx.geometry.Pos;
 import javafx.geometry.VPos;
 import javafx.scene.Node;
 import javafx.scene.control.Alert;
 import javafx.scene.control.ButtonType;
 import javafx.scene.image.Image;
-import javafx.scene.image.ImageView;
 import javafx.scene.input.KeyEvent;
 import javafx.scene.layout.*;
-import javafx.scene.media.Media;
-import javafx.scene.media.MediaPlayer;
 
-import java.io.File;
 import java.util.Optional;
 
 /**
@@ -42,8 +37,6 @@
         this.setOnKeyPressed(new Clavier(this));
         initialiserCarte();
         this.personnage = new Personnage();
-        //this.personnage.setFitHeight(100);
-        //this.personnage.setFitWidth(70);
         this.personnage.setPreserveRatio(true);
         this.personnage.setFitHeight(100);
         this.add(this.personnage,0,0);
@@ -53,7 +46,6 @@
                 BackgroundPosition.CENTER,
                 new BackgroundSize(100,100,
                         true, true,true, true))));
-        //adapterObjets();
     }
 
     /**
@@ -66,7 +58,6 @@
 
         for (int c = 0; c <= MAX_WIDTH; c++) {
             ColumnConstraints column = new ColumnConstraints();
-            //column.setPercentWidth(100.0 / 2);
             column.setMaxWidth(1366/(MAX_WIDTH+1));
             column.setMinWidth(1366/(MAX_WIDTH+1));
             column.setHalignment(HPos.CENTER);
@@ -75,7 +66,6 @@
 
         for (int r = 0; r <= MAX_HEIGHT; r++) {
             RowConstraints row = new RowConstraints();
-            //row.setPercentHeight(100.0 / 4);
             row.setMaxHeight(768/(MAX_HEIGHT+1));
             row.setMinHeight(768/(MAX_HEIGHT+1));
             row.setValignment(VPos.BOTTOM);
@@ -151,11 +141,9 @@
         ObservableList<Node> childrens = this.getChildren();
 
         for (Node node : childrens) {
-            if(this.getRowIndex(node) != null&& this.getColumnIndex(node) != null){
-                if(this.getRowIndex(node) == row && this.getColumnIndex(node) == column) {
-                    result = node;
-                    break;
-                }
+            if(this.getRowIndex(node) != null&& this.getColumnIndex(node) != null && this.getRowIndex(node) == row && this.getColumnIndex(node) == column){
+                result = node;
+                break;
             }
         }
         return result;
@@ -189,22 +177,18 @@
 
         switch (this.deplacementPrecedent.getCode()) {
             case RIGHT:
-                //Personnage.deplacerX(1);
                 Xobjet=this.personnage.getPosX()+1;
                 Yobjet=this.personnage.getPosY();
                 break;
             case LEFT:
-                //Personnage.deplacerX(-1);
                 Xobjet=this.personnage.getPosX()-1;
                 Yobjet=this.personnage.getPosY();
                 break;
             case UP:
-                //Personnage.deplacerY(1);
                 Xobjet=this.personnage.getPosX();
                 Yobjet=this.personnage.getPosY()-1;
                 break;
             case DOWN:
-                //Personnage.deplacerY(-1);
                 Xobjet=this.personnage.getPosX();
                 Yobjet=this.personnage.getPosY()+1;
                 break;
Index: src/main/java/com/stardew/stardewvalley/AccessibleValleyController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.stardew.stardewvalley;\n\nimport javafx.fxml.FXML;\nimport javafx.scene.Node;\nimport javafx.scene.image.Image;\nimport javafx.scene.image.ImageView;\nimport javafx.scene.layout.*;\nimport javafx.scene.media.Media;\nimport javafx.scene.media.MediaPlayer;\nimport javafx.scene.media.MediaView;\nimport javafx.scene.text.Text;\n\nimport java.io.FileNotFoundException;\nimport java.util.ArrayList;\n\n/**\n * Classe AccessibleValleuController permettant de gérer la classe de lancement du jeu (controleur MVC de la classe HelloApplication)\n *\n * @version le 19/03/2023\n */\npublic class AccessibleValleyController {\n\n    private Clavier clavier;\n    private ArrayList<Champ> ListeChamps = new ArrayList<>();\n    private ArrayList<Pierre> ListePierres = new ArrayList<>();\n    private ArrayList<Herbe> ListeHerbes = new ArrayList<>();\n    private ArrayList<Maison> ListeMaison = new ArrayList<>();\n    private Carte carte;\n\n    @FXML\n    BorderPane borderPanel;\n\n    @FXML\n    private void initialize() throws FileNotFoundException {\n        if(clavier == null){\n            this.carte = new Carte();\n            this.borderPanel.setMaxHeight(768);\n            this.borderPanel.setMaxWidth(1366);\n            this.borderPanel.setCenter(this.carte);\n            this.clavier = new Clavier(this.carte);\n            initializeChamps(this.carte);\n            initializePierre(this.carte);\n            initializeHerbes(this.carte);\n            initializeMaison(this.carte);\n            this.borderPanel.setOnKeyPressed(this.clavier);\n            System.out.println(\"Clavier :\"+this.clavier);\n        }\n\n    }\n\n    private void initializeChamps(Carte carte){\n        int index = 0;\n        // Premier champ\n        for (int i = 0 ; i<8;i++){\n            for (int j = 0 ; j<6;j++){\n                ListeChamps.add(new Champ(j,3+i));\n\n            }\n        }\n        // Deuxieme champ\n        for (int i = 0 ; i<6;i++){\n            for (int j = 0 ; j<4;j++){\n                ListeChamps.add(new Champ(8+j,5+i));\n\n            }\n        }\n\n        // Troisieme champ\n        for (int i = 0 ; i<4;i++){\n            for (int j = 0 ; j<2;j++){\n                ListeChamps.add(new Champ(17+j,7+i));\n\n            }\n        }\n        for(index=0 ; index< ListeChamps.size() ; index++){\n            ListeChamps.get(index).setFitWidth(carte.getCellWidth());\n            ListeChamps.get(index).setFitHeight(carte.getCellHeight());\n\n            carte.add( ListeChamps.get(index),  ListeChamps.get(index).getPosX(),  ListeChamps.get(index).getPosY());\n        }\n\n    }\n    private void initializePierre(Carte carte){\n        int index = 0;\n\n        //Premier champ\n        for (int i = 0 ; i<4;i++){\n                ListePierres.add(new Pierre(6+i,0));\n        }\n\n        //Deuxieme champ\n        ListePierres.add(new Pierre(7,6));\n        ListePierres.add(new Pierre(6,8));\n        ListePierres.add(new Pierre(6,5));\n        ListePierres.add(new Pierre(13,4));\n        ListePierres.add(new Pierre(13,7));\n        ListePierres.add(new Pierre(13,9));\n        ListePierres.add(new Pierre(15,6));\n        ListePierres.add(new Pierre(4,2));\n        ListePierres.add(new Pierre(5,2));\n\n        for(index=0  ; index< ListePierres.size();index++){\n            ListePierres.get(index).setFitWidth(carte.getCellWidth());\n            ListePierres.get(index).setFitHeight(carte.getCellHeight());\n\n            carte.add( ListePierres.get(index),  ListePierres.get(index).getPosX(),  ListePierres.get(index).getPosY());\n        }\n\n    }\n\n    private void initializeHerbes(Carte carte){\n        int index = 0;\n        //Premier champ\n        for (int i = 0 ; i<5;i++){\n            for (int j = 0 ; j<4;j++){\n                if(i>0) {\n                    if (j == 0 || j == 3) {\n                        ListeHerbes.add(new Herbe(16 + j, 6 + i));\n                    }\n                }else{\n                    ListeHerbes.add(new Herbe(16 + j, 6 + i));\n                }\n\n            }\n        }\n\n        for(index=0  ; index< ListeHerbes.size();index++){\n            ListeHerbes.get(index).setFitWidth(carte.getCellWidth());\n            ListeHerbes.get(index).setFitHeight(carte.getCellHeight());\n\n            carte.add( ListeHerbes.get(index),  ListeHerbes.get(index).getPosX(),  ListeHerbes.get(index).getPosY());\n        }\n\n    }\n    private void initializeMaison(Carte carte){\n        int index = 0;\n        //Premier champ\n        for (int i = 0 ; i<3;i++){\n            for (int j = 0 ; j<3;j++){\n\n                    if (i == 2 && j == 1) {\n                        ListeMaison.add(new Maison(18 + j, 0 + i,true));\n                    }\n            else{\n                    ListeMaison.add(new Maison(18 + j, 0 + i,false));\n                }\n\n            }\n        }\n\n        for(index=0  ; index< ListeMaison.size();index++){\n            ListeMaison.get(index).setFitWidth(carte.getCellWidth());\n            ListeMaison.get(index).setFitHeight(carte.getCellHeight());\n\n            carte.add( ListeMaison.get(index),  ListeMaison.get(index).getPosX(),  ListeMaison.get(index).getPosY());\n        }\n    }\n\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/stardew/stardewvalley/AccessibleValleyController.java b/src/main/java/com/stardew/stardewvalley/AccessibleValleyController.java
--- a/src/main/java/com/stardew/stardewvalley/AccessibleValleyController.java	(revision 831103e8fb9e1e5bf01b78d1f6cbb5e5075fa7ea)
+++ b/src/main/java/com/stardew/stardewvalley/AccessibleValleyController.java	(date 1679474954324)
@@ -1,38 +1,34 @@
 package com.stardew.stardewvalley;
 
 import javafx.fxml.FXML;
-import javafx.scene.Node;
-import javafx.scene.image.Image;
-import javafx.scene.image.ImageView;
 import javafx.scene.layout.*;
-import javafx.scene.media.Media;
-import javafx.scene.media.MediaPlayer;
-import javafx.scene.media.MediaView;
-import javafx.scene.text.Text;
 
-import java.io.FileNotFoundException;
 import java.util.ArrayList;
 
 /**
- * Classe AccessibleValleuController permettant de gérer la classe de lancement du jeu (controleur MVC de la classe HelloApplication)
+ * Classe AccessibleValleyController permettant de gérer la classe de lancement du jeu (controleur MVC de la classe HelloApplication)
  *
- * @version le 19/03/2023
+ * @version le 22/03/2023
  */
 public class AccessibleValleyController {
 
     private Clavier clavier;
-    private ArrayList<Champ> ListeChamps = new ArrayList<>();
-    private ArrayList<Pierre> ListePierres = new ArrayList<>();
-    private ArrayList<Herbe> ListeHerbes = new ArrayList<>();
-    private ArrayList<Maison> ListeMaison = new ArrayList<>();
+    private ArrayList<Champ> listeChamps = new ArrayList<>();
+    private ArrayList<Pierre> listePierres = new ArrayList<>();
+    private ArrayList<Herbe> listeHerbes = new ArrayList<>();
+    private ArrayList<Maison> listeMaison = new ArrayList<>();
     private Carte carte;
 
     @FXML
     BorderPane borderPanel;
 
+    /**
+     * Initialise la carte (taille et position sur l'écran, les objets sur la carte)
+     */
     @FXML
-    private void initialize() throws FileNotFoundException {
-        if(clavier == null){
+    private void initialize() {
+
+        if(clavier == null) {
             this.carte = new Carte();
             this.borderPanel.setMaxHeight(768);
             this.borderPanel.setMaxWidth(1366);
@@ -43,116 +39,143 @@
             initializeHerbes(this.carte);
             initializeMaison(this.carte);
             this.borderPanel.setOnKeyPressed(this.clavier);
-            System.out.println("Clavier :"+this.clavier);
         }
 
     }
 
-    private void initializeChamps(Carte carte){
+    /**
+     * Positionne les champs sur la carte
+     *
+     * @param carte
+     */
+    private void initializeChamps(Carte carte) {
+
         int index = 0;
+
         // Premier champ
-        for (int i = 0 ; i<8;i++){
+        for (int i = 0 ; i<8;i++) {
             for (int j = 0 ; j<6;j++){
-                ListeChamps.add(new Champ(j,3+i));
+                listeChamps.add(new Champ(j,3+i));
 
             }
         }
+
         // Deuxieme champ
-        for (int i = 0 ; i<6;i++){
+        for (int i = 0 ; i<6;i++) {
             for (int j = 0 ; j<4;j++){
-                ListeChamps.add(new Champ(8+j,5+i));
+                listeChamps.add(new Champ(8+j,5+i));
 
             }
         }
 
         // Troisieme champ
-        for (int i = 0 ; i<4;i++){
+        for (int i = 0 ; i<4;i++) {
             for (int j = 0 ; j<2;j++){
-                ListeChamps.add(new Champ(17+j,7+i));
+                listeChamps.add(new Champ(17+j,7+i));
 
             }
         }
-        for(index=0 ; index< ListeChamps.size() ; index++){
-            ListeChamps.get(index).setFitWidth(carte.getCellWidth());
-            ListeChamps.get(index).setFitHeight(carte.getCellHeight());
+
+        for(index=0 ; index< listeChamps.size() ; index++) {
+            listeChamps.get(index).setFitWidth(carte.getCellWidth());
+            listeChamps.get(index).setFitHeight(carte.getCellHeight());
 
-            carte.add( ListeChamps.get(index),  ListeChamps.get(index).getPosX(),  ListeChamps.get(index).getPosY());
+            carte.add( listeChamps.get(index), listeChamps.get(index).getPosX(), listeChamps.get(index).getPosY());
         }
 
     }
-    private void initializePierre(Carte carte){
+
+    /**
+     * Positionne les pierres sur la carte
+     * 
+     * @param carte
+     */
+    private void initializePierre(Carte carte) {
+
         int index = 0;
 
         //Premier champ
         for (int i = 0 ; i<4;i++){
-                ListePierres.add(new Pierre(6+i,0));
+                listePierres.add(new Pierre(6+i,0));
         }
 
-        //Deuxieme champ
-        ListePierres.add(new Pierre(7,6));
-        ListePierres.add(new Pierre(6,8));
-        ListePierres.add(new Pierre(6,5));
-        ListePierres.add(new Pierre(13,4));
-        ListePierres.add(new Pierre(13,7));
-        ListePierres.add(new Pierre(13,9));
-        ListePierres.add(new Pierre(15,6));
-        ListePierres.add(new Pierre(4,2));
-        ListePierres.add(new Pierre(5,2));
+        // Deuxième champ
+        listePierres.add(new Pierre(7,6));
+        listePierres.add(new Pierre(6,8));
+        listePierres.add(new Pierre(6,5));
+        listePierres.add(new Pierre(13,4));
+        listePierres.add(new Pierre(13,7));
+        listePierres.add(new Pierre(13,9));
+        listePierres.add(new Pierre(15,6));
+        listePierres.add(new Pierre(4,2));
+        listePierres.add(new Pierre(5,2));
 
-        for(index=0  ; index< ListePierres.size();index++){
-            ListePierres.get(index).setFitWidth(carte.getCellWidth());
-            ListePierres.get(index).setFitHeight(carte.getCellHeight());
+        for(index=0  ; index< listePierres.size();index++) {
+            listePierres.get(index).setFitWidth(carte.getCellWidth());
+            listePierres.get(index).setFitHeight(carte.getCellHeight());
 
-            carte.add( ListePierres.get(index),  ListePierres.get(index).getPosX(),  ListePierres.get(index).getPosY());
+            carte.add( listePierres.get(index),  listePierres.get(index).getPosX(),  listePierres.get(index).getPosY());
         }
 
     }
 
-    private void initializeHerbes(Carte carte){
+    /**
+     * Positionne les herbes sur la carte
+     * 
+     * @param carte
+     */
+    private void initializeHerbes(Carte carte) {
+
         int index = 0;
         //Premier champ
-        for (int i = 0 ; i<5;i++){
+        for (int i = 0 ; i<5;i++) {
             for (int j = 0 ; j<4;j++){
                 if(i>0) {
                     if (j == 0 || j == 3) {
-                        ListeHerbes.add(new Herbe(16 + j, 6 + i));
+                        listeHerbes.add(new Herbe(16 + j, 6 + i));
                     }
-                }else{
-                    ListeHerbes.add(new Herbe(16 + j, 6 + i));
+                } else {
+                    listeHerbes.add(new Herbe(16 + j, 6 + i));
                 }
 
             }
         }
 
-        for(index=0  ; index< ListeHerbes.size();index++){
-            ListeHerbes.get(index).setFitWidth(carte.getCellWidth());
-            ListeHerbes.get(index).setFitHeight(carte.getCellHeight());
+        for(index=0  ; index< listeHerbes.size();index++) {
+            listeHerbes.get(index).setFitWidth(carte.getCellWidth());
+            listeHerbes.get(index).setFitHeight(carte.getCellHeight());
 
-            carte.add( ListeHerbes.get(index),  ListeHerbes.get(index).getPosX(),  ListeHerbes.get(index).getPosY());
+            carte.add(listeHerbes.get(index), listeHerbes.get(index).getPosX(), listeHerbes.get(index).getPosY());
         }
 
     }
-    private void initializeMaison(Carte carte){
+
+    /**
+     * Positionne la maison sur la carte
+     * 
+     * @param carte
+     */
+    private void initializeMaison(Carte carte) {
         int index = 0;
         //Premier champ
         for (int i = 0 ; i<3;i++){
             for (int j = 0 ; j<3;j++){
 
                     if (i == 2 && j == 1) {
-                        ListeMaison.add(new Maison(18 + j, 0 + i,true));
+                        listeMaison.add(new Maison(18 + j, 0 + i,true));
                     }
             else{
-                    ListeMaison.add(new Maison(18 + j, 0 + i,false));
+                    listeMaison.add(new Maison(18 + j, 0 + i,false));
                 }
 
             }
         }
 
-        for(index=0  ; index< ListeMaison.size();index++){
-            ListeMaison.get(index).setFitWidth(carte.getCellWidth());
-            ListeMaison.get(index).setFitHeight(carte.getCellHeight());
+        for(index=0  ; index< listeMaison.size();index++){
+            listeMaison.get(index).setFitWidth(carte.getCellWidth());
+            listeMaison.get(index).setFitHeight(carte.getCellHeight());
 
-            carte.add( ListeMaison.get(index),  ListeMaison.get(index).getPosX(),  ListeMaison.get(index).getPosY());
+            carte.add( listeMaison.get(index),  listeMaison.get(index).getPosX(),  listeMaison.get(index).getPosY());
         }
     }
 
